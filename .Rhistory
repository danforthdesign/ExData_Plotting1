load(url("http://bit.ly/dasi_nc"))
summary(nc)
gained_clean = na.omit(nc$gained)
n = length(gained_clean)
n
boot_means = rep(NA, 100)
for(i in 1:100){
boot_sample = sample(gained_clean, n, replace = TRUE)
boot_means[i] = mean(boot_sample)
}
hist(boot_means)
source("http://bit.ly/dasi_inference")
inference(nc$gained, type = "ci", method = "simulation", conflevel = 0.90, est = "mean", boot_method = "perc")
inference(nc$gained, type = "ci", method = "simulation", conflevel = 0.95, est = "mean", boot_method = "perc")
inference(nc$gained, type = "ci", method = "simulation", conflevel = 0.95, est = "mean", boot_method = "se")
inference(nc$gained, type = "ci", method = "simulation", conflevel = 0.95, est = "median", boot_method = "se")
inference(nc$fage, type = "ci", method = "simulation", conflevel = 0.95, est = "mean", boot_method = "se")
by(nc$weight, nc$habit, mean)
boxplot(nc$weight)
boxplot(nc$weight, nc$habit)
boxplot(nc$habit)
boxplot(nc$weight)
split(nc$habit)
split(nc$weight, nc$habit)
boxplot(split(nc$habit, nc$weight))
boxplot(split(nc$weight, nc$smoker))
tapply(nc$weight, nc$habit)
tapply(nc$habit, nc$weight)
mosaicplot(split(nc$weight, nc$habit))
summary(split(nc$weight, nc$habit))
smoker <- subset(nc$weight == "smoker")
smoker <- which(nc$weight == "smoker")
nonsmoker <- which(nc$habit == "nonsmoker")
smoker <- which(nc$habit == "smoker")
nonsmoker
smoker
boxplot(nc$weight, nc$smoker)
boxplot(nc$smoker)
boxplot(smoker)
boxplot(nonsmoker)
boxplot(smoker, nonsmoker)
boxplot(nc$weight(which(nc$habit == "smoker")), nc$weight(which(which(nc$habit=="nonsmoker"))))
plot(nc$weight, nc$habit)
plot(nc$habit, nc$weight)
inference(y = nc$weight, x = nc$habit, est = "mean", type = "ht", null = 0, alternative = "twosided", method = "theoretical")
inference(y = nc$weight, x = nc$habit, est = "mean", type = "ci", null = 0, alternative = "twosided", method = "theoretical", order = c("smoker","nonsmoker"))
inference(y = nc$weight, x = nc$habit, type = "ci", method = "simulation", conflevel = 0.95, est = "mean", boot_method = "perc")
summary(nc$mature)
nc$mature
summary(nc$mage)
summary(nc$mage[nc$mature == "mature mom"])
summary(nc$mage[nc$mature == "younger mom"])
load(url("http://bit.ly/dasi_gss_ws_cl"))
plot(class)
plot(gss$class)
plot(gss$wordsum)
inference(y = gss$wordsum, x = gss$class, est = "mean", type = "ht", alternative = "greater", method = "theoretical")
library(datasets)
data(iris)
?iris
mean(Sepal.Length)
iris$Sepal.Length
iris$Species
virginica <- subset(iris$species == "virginica")
virginica <- subset(iris$Species, "virginica")
virginica <- which(iris$Species == "virginica")
summary(virginica)
tapply(iris$Species, iris$Sepal.Length)
mapply(mean, iris$Sepal.Length, iris$Species)
colMeans(virginica)
colMeans(virginica, iris$Sepal.Length)
colMeans(iris)
colMeans(iris$Sepal.Length)
mean(virginica[1])
virginica
mean(virginica[3])
mean(iris[,1])
virginica <- subset(iris, iris$Species=="virginica")
mean(virginica[,1])
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
apply(iris, 1, mean)
library(datasets)
data(mtcars)
?mtcars
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(mtcars, cyl, mean)
lapply(mtcars, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
debug(ls)
ls()
q
load(url("http://bit.ly/dasi_gss_data"))
fearAndTransit <- subset(gss, !is.na(gss$fear) & !is.na(gss$natmass))
justFearAndTransit <- table(fearAndTransit$fear, fearAndTransit$natmass)
justFearAndTransit
justFearAndTransit <- data.frame(fearAndTransit$fear, fearAndTransit$natmass)
tableFearAndTransit <- table(fearAndTransit$fear, fearAndTransit$natmass)
mosaicplot(tableFearAndTransit)
tableTransitAndFear <- table(fearAndTransit$natmass, fearAndTransit$fear)
mosaicplot(tableTransitAndFear)
tableTransitAndFear
plot(tableFearAndTransit)
boxplot(tableFearandTransit)
boxplot(tableFearAndTransit)
fearAndTransit$natmass == "About Right"
chisq.test(tableFearAndTransit)
safeTooMuch <- subset(gss, fearAndTransit$fear == "Yes" & fearAndTransit$natmass == "Too Much")
safeTooMuch <- subset(gss, fearAndTransit$fear == "No" & fearAndTransit$natmass == "Too Much")
notsafeTooMuch <- subset(gss, fearAndTransit$fear == "Yes" & fearAndTransit$natmass == "Too Much")
safe <- subset(gss, fearAndTransit$fear == "No")
notsafe <- subset(gss, fearAndTransit$fear == "Yes")
tooMuch <- subset(gss, fearAndTransit$natmass == "Too Much")
expectedSafeTooMuch <- (safe*tooMuch)/fearAndTransit
expectedSafeTooMuch <- (safe * tooMuch)/fearAndTransit$fear
safe
safe
col(safe)
length(safe)
length(tooMuch)
length(notsafe)
sum(notsafe)
sum(with(gss, fearAndTransit$natmass == "Too Much"))
sum(fearAndTransit)
sum(with(fearAndTransit))
safe * tooMuch
safe
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
swirl()
swirl()
fileURL <= "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileURL, "idaho.csv")
fileURL <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileURL, "idaho.csv")
idahoData <- read.csv("idaho.csv")
summary(idahoData)
idahoData$VAL
millionPlus <- subset(idahoData, VAL == "24")
fileURL <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileURL, "gov_NGAP.xlsx")
fullData <- read.xlxs("gov_NGAP.xlsx")
dat <- read.xlsx("gov_NGAP.xlsx", rowIndex=18:23 , colIndex=7:15)
reinstall.packages("xlsx")
install.packages("xlsx")
read.xlsx
dat <- read.xlsx("gov_NGAP.xlsx", rowIndex=18:23 , colIndex=7:15)
setInternet2(use=FALSE)
read.xlsx
install.packages(xlsx)
install.packages("xlsx")
read.xlsx
$ apt-get install liblzma-dev
apt-get install liblzma-dev
install.packages("rJava")
install.packages("xlsx")
read.xlsx
install.packages("xlsxjars")
installed.packages()
require(xlsxjars)
require(rJava)
require(xlsx)
library(xlsx)
library("rJava")
Sys.setenv(JAVA_HOME='C://Program Files/Java/jre.1.8.0_65')
library('rJava')
setwd("C:/Users/janet/Documents/GitHub/ExData_Plotting1")
electricData <- read.table("household_power_consumption.txt", header=TRUE, sep=";", skip=66637, nrows=2880)
View(electricData)
View(electricData)
electricData <- read.table("household_power_consumption.txt", header=TRUE, sep=";", skip=66636, nrows=2880)
electricData <- read.table("household_power_consumption.txt", header=FALSE, sep=";", skip=66636, nrows=2880)
electricData <- read.table("household_power_consumption.txt", header=FALSE, sep=";", skip=66637, nrows=2880)
tableHeader <- c("Date","Time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3")
electricData <- read.table("household_power_consumption.txt", sep=";", col.names=tableHeader, skip=66637, nrows=2880)
glActivePower <- with(electricData, table(Time, Global_active_power))
hist(glActivePower)
glActivePower <- with(electricData, table(Time~Global_active_power))
hist(electricData$Time~electricData$Global_active_power)
time <- strptime(electricData$time, format="%H:%M:%S" )
date <- strptime(electricData$date, format="%d/%m/%Y" )
date
time
hist(electricData$Global_active_power)
hist(electricData$Global_active_power, col="red")
main = "Global Active Power"
hist(electricData$Global_active_power, col="red", main=paste("Global Active Power"), xlab="Global Active Power (kilowatts)")
dev.print(device = png, filename = 'plot1.png', width = 480, height = 480)
dev.off
dev.print(png, filename = 'plot1.png', width = 480, height = 480)
dev.off
dev.print(png, filename = 'plot1.png', width = 480, height = 480)
plot(electricData$Global_active_power, type="l",main=paste("Global Active Power"), ylab="Global Active Power (kilowatts)")
table(as.Date(electricData$Date, format="%a"),electricData$Global_active_power)
weekdaysTable <- table(as.Date(electricData$Date, format="%a"),electricData$Global_active_power)
plot(weekdaysTable)
plot(as.Date(electricData$Date, format="%a"), electricData$Global_active_power, type="l", ylab="Global Active Power (kilowatts)")
plot(strptime(electricData$Date, format="%a"), electricData$Global_active_power, type="l", ylab="Global Active Power (kilowatts)")
plot(electricData$Date, electricData$Global_active_power, type="l", ylab="Global Active Power (kilowatts)")
plot(electricData$Date~electricData$Global_active_power, type="l", ylab="Global Active Power (kilowatts)")
plot(electricData$Global_active_power, type="l", ylab="Global Active Power (kilowatts)")
dev.print(png, filename = 'plot2.png', width = 480, height = 480)
plot(electricData$Sub_metering_1, type="l", ylab="Energy sub metering")
lines(electricData$Sub_metering_2, col="red")
lines(electricData$Sub_metering_3, col="blue")
axis(1, labels=c("Thu, Fri, Sat"))
axis(1, at=1:3,labels=c("Thu, Fri, Sat"))
axis(1, at=1:4,labels=c("Thu, Fri, Sat"))
plot(electricData$Sub_metering_1, type="l", ylab="Energy sub metering", xaxt="n")
> lines(electricData$Sub_metering_2, col="red")
> lines(electricData$Sub_metering_3, col="blue")
lines(electricData$Sub_metering_2, col="red")
lines(electricData$Sub_metering_3, col="blue")
legend("topright")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=("black", "red", "blue"))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"), lty=1 )
daysOfWeek <- c("Thu", "Fri", "sat")
axis(1, at=1:3, labels=daysOfWeek)
axis(1, at=1:3, labels="Thu","Fri","Sat")
axis(1, at=1:3, labels=daysOfWeek[1:3])
source("plot2.R")
source("plot2.R")
source("plot3.R")
par(mfrow=c(2,2))
plot(electricData$Global_active_power, type="l", ylab="Global Active Power (kilowatts)", xaxt="n")
axis(1, at=1:3, labels=daysOfWeek[1:3])
plot(electricData$Voltage, type="l", ylab="Voltage", xaxt="n")
axis(1, at=1:3, labels=daysOfWeek[1:3])
plot(electricData$Sub_metering_1, type="l", ylab="Energy sub metering", xaxt="n")
lines(electricData$Sub_metering_2, col="red")
lines(electricData$Sub_metering_3, col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"), lty=1 )
axis(1, at=1:3, labels=daysOfWeek[1:3])
plot(electricData$Global_reactive_power, type="l", ylab="Global_reactive_power", xaxt="n")
axis(1, at=1:3, labels=daysOfWeek[1:3])
dev.print(png, filename = 'plot4.png', width = 480, height = 480)
##Left Top Plot
plot(electricData$Global_active_power, type="l", ylab="Global Active Power (kilowatts)", xaxt="n")
axis(1, at=1:3, labels=daysOfWeek[1:3])
##Right Top Plot
plot(electricData$Voltage, type="l", ylab="Voltage", xaxt="n")
axis(1, at=1:3, labels=daysOfWeek[1:3])
##Left Bottom Plot
plot(electricData$Sub_metering_1, type="l", ylab="Energy sub metering", xaxt="n")
lines(electricData$Sub_metering_2, col="red")
lines(electricData$Sub_metering_3, col="blue")
axis(1, at=1:3, labels=daysOfWeek[1:3])
##Right Bottom Plot
plot(electricData$Global_reactive_power, type="l", ylab="Global_reactive_power", xaxt="n")
axis(1, at=1:3, labels=daysOfWeek[1:3])
dev.print(png, filename = 'plot4.png', width = 480, height = 480)
##Left Top Plot
plot(electricData$Global_active_power, type="l", ylab="Global Active Power (kilowatts)", xaxt="n")
axis(1, at=1:3, labels=daysOfWeek[1:3])
##Right Top Plot
plot(electricData$Voltage, type="l", ylab="Voltage", xaxt="n")
axis(1, at=1:3, labels=daysOfWeek[1:3])
##Left Bottom Plot
plot(electricData$Sub_metering_1, type="l", ylab="Energy sub metering", xaxt="n")
lines(electricData$Sub_metering_2, col="red")
lines(electricData$Sub_metering_3, col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"), lty=1, cex=.5 )
axis(1, at=1:3, labels=daysOfWeek[1:3])
##Right Bottom Plot
plot(electricData$Global_reactive_power, type="l", ylab="Global_reactive_power", xaxt="n")
axis(1, at=1:3, labels=daysOfWeek[1:3])
dev.print(png, filename = 'plot4.png', width = 480, height = 480)
##Left Top Plot
plot(electricData$Global_active_power, type="l", ylab="Global Active Power (kilowatts)", xaxt="n")
axis(1, at=1:3, labels=daysOfWeek[1:3])
##Right Top Plot
plot(electricData$Voltage, type="l", ylab="Voltage", xaxt="n")
axis(1, at=1:3, labels=daysOfWeek[1:3])
##Left Bottom Plot
plot(electricData$Sub_metering_1, type="l", ylab="Energy sub metering", xaxt="n")
lines(electricData$Sub_metering_2, col="red")
lines(electricData$Sub_metering_3, col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"), lty=1, cex=.25 )
axis(1, at=1:3, labels=daysOfWeek[1:3])
##Right Bottom Plot
plot(electricData$Global_reactive_power, type="l", ylab="Global_reactive_power", xaxt="n")
axis(1, at=1:3, labels=daysOfWeek[1:3])
dev.print(png, filename = 'plot4.png', width = 480, height = 480)
##Left Top Plot
plot(electricData$Global_active_power, type="l", ylab="Global Active Power (kilowatts)", xaxt="n")
axis(1, at=1:3, labels=daysOfWeek[1:3])
##Right Top Plot
plot(electricData$Voltage, type="l", ylab="Voltage", xaxt="n")
axis(1, at=1:3, labels=daysOfWeek[1:3])
##Left Bottom Plot
plot(electricData$Sub_metering_1, type="l", ylab="Energy sub metering", xaxt="n")
lines(electricData$Sub_metering_2, col="red")
lines(electricData$Sub_metering_3, col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"), lty=1, cex=.5, pt.cex=1 )
axis(1, at=1:3, labels=daysOfWeek[1:3])
##Right Bottom Plot
plot(electricData$Global_reactive_power, type="l", ylab="Global_reactive_power", xaxt="n")
axis(1, at=1:3, labels=daysOfWeek[1:3])
dev.print(png, filename = 'plot4.png', width = 480, height = 480)
##Left Top Plot
plot(electricData$Global_active_power, type="l", ylab="Global Active Power (kilowatts)", xaxt="n")
axis(1, at=1:3, labels=daysOfWeek[1:3])
##Right Top Plot
plot(electricData$Voltage, type="l", ylab="Voltage", xaxt="n")
axis(1, at=1:3, labels=daysOfWeek[1:3])
##Left Bottom Plot
plot(electricData$Sub_metering_1, type="l", ylab="Energy sub metering", xaxt="n")
lines(electricData$Sub_metering_2, col="red")
lines(electricData$Sub_metering_3, col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"), lty=1, box.lty=0, cex=.75, pt.cex=.5 )
axis(1, at=1:3, labels=daysOfWeek[1:3])
##Right Bottom Plot
plot(electricData$Global_reactive_power, type="l", ylab="Global_reactive_power", xaxt="n")
axis(1, at=1:3, labels=daysOfWeek[1:3])
dev.print(png, filename = 'plot4.png', width = 480, height = 480)
##Left Top Plot
plot(electricData$Global_active_power, type="l", ylab="Global Active Power (kilowatts)", xaxt="n")
axis(1, at=1:3, labels=daysOfWeek[1:3])
##Right Top Plot
plot(electricData$Voltage, type="l", ylab="Voltage", xaxt="n")
axis(1, at=1:3, labels=daysOfWeek[1:3])
##Left Bottom Plot
plot(electricData$Sub_metering_1, type="l", ylab="Energy sub metering", xaxt="n")
lines(electricData$Sub_metering_2, col="red")
lines(electricData$Sub_metering_3, col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"), lty=1, box.lty=0, cex=.4, pt.cex=.75 )
axis(1, at=1:3, labels=daysOfWeek[1:3])
##Right Bottom Plot
plot(electricData$Global_reactive_power, type="l", ylab="Global_reactive_power", xaxt="n")
axis(1, at=1:3, labels=daysOfWeek[1:3])
dev.print(png, filename = 'plot4.png', width = 480, height = 480)
